225 https://leetcode.com/problems/implement-stack-using-queues/description/

Реалізуйте стек «останній прийшов першим вийшов» (LIFO), використовуючи лише дві черги. Реалізований стек повинен підтримувати всі функції звичайного стека ( push, top, popі empty).

Реалізувати MyStackклас:

void push(int x)Розміщує елемент x на вершину стека.
int pop()Видаляє елемент у верхній частині стека та повертає його.
int top()Повертає елемент на вершині стека.
boolean empty()Повертає, trueякщо стек порожній, falseінакше.
Примітки:

Ви повинні використовувати лише стандартні операції черги, що означає, що дійсними є лише операції , push to backі peek/pop from front.sizeis empty
Залежно від вашої мови, черга може не підтримуватися нативно. Ви можете імітувати чергу за допомогою списку або двох черг (двосторонньої черги), якщо ви використовуєте лише стандартні операції черги.
 

приклад 1:

Введення
["MyStack", "push", "push", "top", "pop", "empty"]
[[], [1], [2], [], [], []]
Вихід
[null, null, null, 2, 2, false]

Пояснення
MyStack myStack = новий MyStack();
myStack.push(1);
myStack.push(2);
myStack.top(); // повернути 2
myStack.pop(); // повернути 2
myStack.empty(); // повертає False
 

Обмеження:

1 <= x <= 9
Здебільшого 100дзвінки здійснюватимуться до push, pop, topта empty.
Усі дзвінки на popта topдійсні.
 

Подальші дії: чи можете ви реалізувати стек, використовуючи лише одну чергу?